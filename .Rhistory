library(swirl)
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-3.5^2
sum(sice_sqr*dice_high)-edh^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
setwd("~/data_science/analytics_edge/unit2")
baseball = read.csv("baseball.csv")
moneyball = subset(baseball, Year < 2002)
moneyball$RD = moneyball$RS - moneyball$RA
plot(moneyball$RD, moneyball$W)
WinsReg = lm(W ~ RD, data=moneyball)
summary(WinsReg)
data("baseball.csv")
ls
ls()
getwd()
80.8814 + .1058*(713-614)
RunsReg = lm(RS ~ OBP + SLG + BA, data = moneyball)
summary(RunsReg)
RunsReg = lm(RS ~ OBP +SLG, data = moneyball)
summary(RunsReg)
RunsAllowedReg = lm(RA ~ OOPB + OSLG, data=moneyball)
RunsAllowedReg = lm(RA ~ OOBP + OSLG, data=moneyball)
summary(RunsAllowedReg)
-837.38 + 2913.60*.311 + 1514.29*.405
-837.38 + 2913.60*.297 + 1514.29*.370
teamRank = c(1,2,3,3,4,4,4,4,5,5)
wins2012 = c(94, 88, 95, 88, 93, 94, 98, 97, 93, 94)
wins2013 = c(97, 97, 92, 93, 92, 96, 94, 96, 92, 90)
cor(teamRank, wins2012)
cor(teamRank, wins2013)
setwd("~/data_science/datasciencecoursera/reproducible_research/RepData_PeerAssessment1")
getwd()
amd = read.csv("/Users/johnbobo/data_science/datasciencecoursera/reproducible_research/RepData_PeerAssessment1/activity.csv")
amd = read.csv("/Users/johnbobo/data_science/datasciencecoursera/reproducible_research/RepData_PeerAssessment1/activity.csv")
mean(amd$steps)
mean(amd$steps, na.rm=TRUE)
60/5
12*24
mean(amd$steps, na.rm=TRUE)*12*24
View(amd)
View(amd)
amd$Date
amd
amd$date
amd$date[1]
library(lubridate)
ymd(amd$date)
year(amd$date[1])
library(dplyr)
tapply(amd$steps, amd$date, mean)
table(amd$steps,amd$date)
table(amd$steps,amd$date, mean)
tapply(amd$date, amd$steps, mean)
tapply(amd$date, amd$steps, mean, na.rm=TRUE)
tapply(amd$steps, amd$date, mean, na.rm=TRUE)
tapply(amd$steps, amd$date, max, na.rm=TRUE)
tapply(amd$steps, amd$date, max, na.rm=TRUE)
tapply(amd$steps, amd$date, mean, na.rm=TRUE)
tapply(amd$steps, amd$date, min, na.rm=TRUE)
tapply(amd$steps, amd$date, min, na.rm=TRUE)
?tapply
tapply(amd$steps, amd$date)
sapply(amd$steps, amd$date, mean, na.rm=TRUE)
?sapply
swirl()
library(swirl)
swirl()
read.csv(path2csv, stringsAsFactors = FALSE)
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tabl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -X:size)
select(cran, -(X:size)
)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size >100500 & r_os == "linux-gnu")
filter(cran, size >100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_gb = size_mb/2^10)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
ls("mydf")
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = .99)
filter(pack_sum, count > 697)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = .99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_counts_sorted)
View(top_unique_sorted)
submit()
submit()
submit
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
0
getwd()
library(dplyr)
amd %>%
group_by(date) %>%
summarize(steps, mean)
amd %>%
group_by(date) %>%
summarize( mean)
amd %>%
group_by(date) %>%
summarize(steps)
amd %>%
group_by(date) %>%
summarize(mean(steps))
amd %>%
group_by(date) %>%
summarize(mean(steps), na.rm=TRUE)
library(dplyr)
amd %>%
group_by(date) %>%
summarize(stepsPerDay = sum(steps), na.rm=TRUE)
amd %>%
group_by(date) %>%
summarize(stepsPerDay = sum(steps), na.rm=TRUE) %>%
summarize(mean(stepsPerDay), na.rm = TRUE)
amd %>%
group_by(date) %>%
mutate(stepsPerDay = sum(steps), na.rm=TRUE) %>%
summarize(mean(stepsPerDay), na.rm = TRUE)
amd %>%
group_by(date) %>%
mutate(stepsPerDay = sum(steps), na.rm=TRUE) %>%
mean(stepsPerDay, na.rm = TRUE)
amd %>%
group_by(date) %>%
mutate(stepsPerDay = sum(steps), na.rm=TRUE) %>%
summarize(mean(stepsPerDay), na.rm = TRUE)
amd %>%
group_by(date) %>%
mutate(stepsPerDay = sum(steps), na.rm=TRUE) %>%
mean(amd$stepsPerDay, na.rm = TRUE)
amd %>%
group_by(date) %>%
mean(mutate(stepsPerDay = sum(steps), na.rm=TRUE)$stepsPerDay
amd %>%
group_by(date) %>%
mean(mutate(stepsPerDay = sum(steps), na.rm=TRUE)$stepsPerDay %>%
print
amd %>%
group_by(date) %>%
mean(mutate(stepsPerDay = sum(steps), na.rm=TRUE)$stepsPerDay %>%
print
)
amd %>%
group_by(date) %>%
mean(mutate(stepsPerDay = sum(steps), na.rm=TRUE)$stepsPerDay) %>%
print
amd_by_day <-amd %>%
group_by(date) %>%
mutate(stepsPerDay = sum(steps), na.rm=TRUE) %>%
3
amd = read.csv("/Users/johnbobo/data_science/datasciencecoursera/reproducible_research/RepData_PeerAssessment1/activity.csv")
library(dplyr)
amd_by_day <-amd %>%
group_by(date) %>%
mutate(stepsPerDay = sum(steps), na.rm=TRUE)
View(amd_by_day)
View(amd_by_day)
amd_by_day <-amd %>%
group_by(date) %>%
mutate(stepsPerDay = sum(steps))
View(amd_by_day)
View(amd_by_day)
mean(amd_by_day$stepsPerDay)
mean(amd_by_day$stepsPerDay, na.rm = TRUE)
mean(amd_by_day$stepsPerDay, na.rm = TRUE)
plot(amd$interval, amd$steps)
plot(amd$interval, amd$steps, type = "l")
amd_by_interval <- amd %>%
group_by(interval) %>%
mutate(stepsPerInterval = mean(steps, na.rm = TRUE))
View(amd_by_interval)
View(amd_by_interval)
library(ggplot2)
qplot(stepsPerInterval, interval, data = amd_by_interval)
qplot(interval, stepsPerInterval, data = amd_by_interval)
qplot(interval, stepsPerInterval, data = amd_by_interval, geom = c("line"))
qplot(stepsPerDay, data = amd_by_day)
mean(amd_by_day$stepsPerDay)
mean(amd_by_day$stepsPerDay, na.rm = TRUE)
median(amd_by_day$stepsPerDay, na.rm = TRUE)
amd_by_interval$interval[which.max(amd_by_interval$stepsPerInterval)]
qplot(interval, stepsPerInterval, data = amd_by_interval, geom = c("line"))
